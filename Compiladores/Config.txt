package fes.aragon.codigo;
%%
%public
%class Lexico
%line
%char
%column
%full //utilizar codigo extendido que lo pueda reconocer, UNICODE
%type Tokens
%{
	private boolean hayToken=false;
	public boolean getHayToken(){
		return this.hayToken;	
	}
%}
%init{
	/*codigo que se ejecuta en el constructor de la clase */
%init}
%eof{
	/*codigo que se ejecuta al terminar el archivo*/
	this.hayToken=false;
%eof}
Espacio = " "
PuntoComa=";"
saltoLinea= "\n|\r"
//expresiones
ENTERO = [0-9]+
ID     = [A-Za-zñÑ][_0-9A-Za-zñÑ]*
%%
{ENTERO} {
	Tokens tok=new Tokens(yytext(),Sym.ENTERO,yyline,yycolumn);
	this.hayToken=true;
	return tok;
}
{ID} {
	Tokens tok=new Tokens(yytext(),Sym.ID,yyline,yycolumn);
	this.hayToken=true;
	return tok;
	
}
{PuntoComa} {
	Tokens tok=new Tokens(yytext(),Sym.PUNTOCOMA,yyline,yycolumn);
	this.hayToken=true;
	return tok;
	
}
{saltoLinea} {

}
{Espacio} {
		
}
. {
	String error ="Error Léxico : " +yytext() + " en la linea "+ (yyline +1) + 
	" y la columna " + (yycolumn+1);
	System.out.printl(error);
}

